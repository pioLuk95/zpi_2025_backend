{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API for managing medical appointments with doctors, nurses, and physiotherapists. All endpoints require JWT authentication.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "Medical Visit API Server"
        },
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in and get a JWT token",
                "operationId": "c1530903f2ec8a1c13dd5e7f775cd2a8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10001
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the user",
                "operationId": "06f0f5006d5a53da7bdcde6381cd084f",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10001
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh the JWT token",
                "operationId": "47d6ecf1aa5d59780a66a97113e085e1",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token not provided or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10001
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/email": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send password reset email",
                "operationId": "f3e0661ab6737f195838817c62fe896f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10022
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to send reset link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unable to send reset link"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password",
                "operationId": "1d7e5a677aac4915ac3ee634758bf23d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token or email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid token or email"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10000
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "password": [
                                                    "The password confirmation does not match."
                                                ]
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10022
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/emergency-calls": {
            "post": {
                "tags": [
                    "EmergencyCalls"
                ],
                "summary": "Create a new emergency call",
                "description": "Creates a new emergency call for the authenticated user. The `patient_id` is automatically assigned based on the logged-in user.",
                "operationId": "c4841f462732c8f264dde05db5d05e5c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "date",
                                    "status"
                                ],
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-05"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Emergency call created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Emergency call created successfully"
                                        },
                                        "call_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error_code": {
                                            "type": "integer",
                                            "example": 10001
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error_code": {
                                            "type": "integer",
                                            "example": 10022
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/medical-records": {
            "post": {
                "tags": [
                    "Medical Records"
                ],
                "summary": "Create a new medical record",
                "description": "Create a new medical record\n\nCreates a new medical record for the authenticated patient with the provided health parameters.\nThe patient_id is automatically retrieved from the authenticated user.",
                "operationId": "562a9bb1a3476fa3cd18ea0d9f82b4e4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "record_date",
                                    "blood_pressure",
                                    "temperature",
                                    "pulse",
                                    "weight",
                                    "mood",
                                    "pain_level",
                                    "oxygen_saturation"
                                ],
                                "properties": {
                                    "record_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-05"
                                    },
                                    "blood_pressure": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.8
                                    },
                                    "temperature": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 36.6
                                    },
                                    "pulse": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 75
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 70.5
                                    },
                                    "mood": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "pain_level": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "oxygen_saturation": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 98.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Medical record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "blood_pressure": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.8
                                                },
                                                "temperature": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 36.6
                                                },
                                                "pulse": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 75
                                                },
                                                "weight": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 70.5
                                                },
                                                "mood": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "pain_level": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "oxygen_saturation": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 98.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error_code": {
                                            "type": "integer",
                                            "example": 10022
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/medical-visits/specialists": {
            "get": {
                "tags": [
                    "Medical Visits"
                ],
                "summary": "Retrieve Available Medical Specialists",
                "description": "Returns a categorized list of available healthcare providers including doctors, nurses, and physiotherapists. This endpoint is the starting point for appointment booking.",
                "operationId": "getSpecialists",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved specialists list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Human-readable success message",
                                            "type": "string",
                                            "example": "Specialists list retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Specialists grouped by type",
                                            "properties": {
                                                "doctor": {
                                                    "description": "Available doctors",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "doctor"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Dr. Anna Johnson"
                                                            },
                                                            "specialization": {
                                                                "type": "string",
                                                                "example": "Family Medicine"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "anna.johnson@hospital.com"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "example": "+1-555-0101"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "nurse": {
                                                    "description": "Available nurses",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "nurse"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Nurse Sarah Williams"
                                                            },
                                                            "specialization": {
                                                                "type": "string",
                                                                "example": "Home Care"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "sarah.williams@hospital.com"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "example": "+1-555-0201"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "physiotherapist": {
                                                    "description": "Available physiotherapists",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "physiotherapist"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "PT Robert Davis"
                                                            },
                                                            "specialization": {
                                                                "type": "string",
                                                                "example": "Sports Rehabilitation"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "robert.davis@hospital.com"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "example": "+1-555-0301"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10001
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unable to retrieve specialists"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/medical-visits/available-slots": {
            "get": {
                "tags": [
                    "Medical Visits"
                ],
                "summary": "Check Available Appointment Time Slots",
                "description": "Returns available time slots for a specific specialist on a given date. This is used in the second step of appointment booking.",
                "operationId": "getAvailableSlots",
                "parameters": [
                    {
                        "name": "specialist_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available time slots retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Available slots retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "specialist": {
                                                    "description": "Details of the selected specialist",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Dr. Anna Johnson"
                                                        },
                                                        "specialization": {
                                                            "type": "string",
                                                            "example": "Family Medicine"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-15"
                                                },
                                                "available_slots": {
                                                    "description": "List of available appointment times",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "09:00"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10001
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "specialist_id": [
                                                    "The specialist id field is required."
                                                ],
                                                "date": [
                                                    "The date must be a date after or equal to today."
                                                ]
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10022
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specialist not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Specialist not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10004
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/medical-visits/schedule": {
            "post": {
                "tags": [
                    "Medical Visits"
                ],
                "summary": "Schedule New Medical Appointment",
                "description": "Creates a new medical appointment booking. This is the main endpoint for completing the appointment scheduling process.",
                "operationId": "scheduleVisit",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "specialist_type",
                                    "specialist_id",
                                    "date",
                                    "time",
                                    "reason",
                                    "patient_name",
                                    "patient_phone",
                                    "patient_email"
                                ],
                                "properties": {
                                    "specialist_type": {
                                        "type": "string",
                                        "example": "doctor"
                                    },
                                    "specialist_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-15"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "10:30"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "General checkup and consultation about recent symptoms"
                                    },
                                    "patient_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "patient_phone": {
                                        "type": "string",
                                        "example": "+1-555-0199"
                                    },
                                    "patient_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@email.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment scheduled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Medical visit scheduled successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "visit_id": {
                                                    "type": "string",
                                                    "example": "visit_1622548800_1234"
                                                },
                                                "specialist_name": {
                                                    "type": "string",
                                                    "example": "Dr. Anna Johnson"
                                                },
                                                "specialization": {
                                                    "type": "string",
                                                    "example": "Family Medicine"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-15"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "example": "10:30"
                                                },
                                                "reason": {
                                                    "type": "string",
                                                    "example": "General checkup and consultation about recent symptoms"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "scheduled"
                                                },
                                                "confirmation_number": {
                                                    "type": "string",
                                                    "example": "CONF-2025-001"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot schedule appointments in the past"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10000
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10001
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Specialist not found or type mismatch"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10004
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Time slot already booked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The selected time slot is already booked"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10009
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "reason": [
                                                    "The reason must be at least 10 characters."
                                                ],
                                                "patient_email": [
                                                    "The patient email must be a valid email address."
                                                ]
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 10022
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patient-medications": {
            "get": {
                "tags": [
                    "PatientMedications"
                ],
                "summary": "Show medications to confirm",
                "description": "Show medications to confirm",
                "operationId": "3e0210136c4be2663d3b9940aa261a33",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patient-medications/confirm": {
            "post": {
                "tags": [
                    "PatientMedications"
                ],
                "summary": "Confirm medication intake",
                "description": "Confirm medication intake",
                "operationId": "a2aa82bc8a059896c459c4a1352f2f2a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "medication_ids"
                                ],
                                "properties": {
                                    "medication_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Medication intake confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Medication intake confirmed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid medication IDs provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid medication IDs provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recommendations": {
            "get": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get all recommendations",
                "description": "Get all recommendations\n\nReturns a list of all recommendations available in the system.",
                "operationId": "getRecommendations",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Check-up Visit"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Recommended check-up visit in 3 months"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-13T14:30:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-13T14:30:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recommendations/{id}": {
            "get": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get recommendation details",
                "description": "Get recommendation details\n\nReturns detailed information about a specific recommendation.",
                "operationId": "getRecommendationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recommendation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Check-up Visit"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Recommended check-up visit in 3 months"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recommendation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error_code": {
                                            "type": "integer",
                                            "example": 1004
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Recommendation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter your JWT token in the format: Bearer {token}"
            }
        }
    },
    "tags": [
        {
            "name": "EmergencyCalls",
            "description": "API Endpoints for managing emergency calls for patients"
        },
        {
            "name": "PatientMedications",
            "description": "API Endpoints for managing patient medications"
        },
        {
            "name": "Recommendations",
            "description": "Operations related to recommendations"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Medical Records",
            "description": "Medical Records"
        },
        {
            "name": "Medical Visits",
            "description": "Medical Visits"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}