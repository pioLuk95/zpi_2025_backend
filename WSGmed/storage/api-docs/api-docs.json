{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "Centralized API documentation",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user\n\nCreates a new user account and returns a JWT token upon successful registration.",
                "operationId": "71dd2e9be4f7e29fb1ff52c0df3187c5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ],
                                                "password": [
                                                    "The password confirmation does not match."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in and get a JWT token",
                "description": "Log in and get a JWT token\n\nAuthenticates the user and returns a JWT token if credentials are valid.",
                "operationId": "c1530903f2ec8a1c13dd5e7f775cd2a8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the user",
                "description": "Log out the user\n\nLogs out the currently authenticated user.",
                "operationId": "06f0f5006d5a53da7bdcde6381cd084f",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh the JWT token",
                "description": "Refresh the JWT token\n\nGenerates a new JWT token based on the provided valid token.",
                "operationId": "47d6ecf1aa5d59780a66a97113e085e1",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token not provided or invalid"
                    }
                }
            }
        },
        "/api/confirm-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirm user's password",
                "description": "Confirm user's password\n\nChecks if the provided password matches the authenticated user's password.",
                "operationId": "3dfe20fd8a8488b145b1784f75ee7ee7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password confirmed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "password": [
                                                    "The password field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Password does not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Password does not match"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/email": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send password reset email",
                "description": "Send password reset email\n\nSends a password reset link to the user's email.",
                "operationId": "f3e0661ab6737f195838817c62fe896f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password",
                "description": "Reset password\n\nResets the user's password using a valid token.",
                "operationId": "1d7e5a677aac4915ac3ee634758bf23d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "password": [
                                                    "The password confirmation does not match."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify user's email",
                "description": "Verify user's email\n\nVerifies the user's email using a verification token.",
                "operationId": "d33cf5d42d06071846157ec2e65098bb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "hash"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "hash": {
                                        "type": "string",
                                        "example": "verification-hash"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid verification data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid verification data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/emergency-calls": {
            "get": {
                "tags": [
                    "EmergencyCalls"
                ],
                "summary": "Get a list of all emergency calls",
                "description": "Display a list of all emergency calls.",
                "operationId": "7b2fe04cc899f5ee8ad67f8514dcb8ce",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "patient_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-05-05"
                                            },
                                            "status": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "EmergencyCalls"
                ],
                "summary": "Create a new emergency call",
                "description": "Create a new emergency call.",
                "operationId": "c4841f462732c8f264dde05db5d05e5c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "date",
                                    "status"
                                ],
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-05"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Emergency call created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "patient_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-05-05"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emergency-calls/{id}": {
            "get": {
                "tags": [
                    "EmergencyCalls"
                ],
                "summary": "Get a specific emergency call by ID",
                "description": "Get a specific emergency call by ID.",
                "operationId": "c0df11852759e0a900e9c62a31391845",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the emergency call",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "patient_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-05-05"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Emergency call not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "EmergencyCalls"
                ],
                "summary": "Update an existing emergency call",
                "description": "Update an existing emergency call.",
                "operationId": "f2db8a84d69ac2a6bbfe9a1ca779f1a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the emergency call",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-05"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emergency call updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "patient_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-05-05"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Emergency call not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EmergencyCalls"
                ],
                "summary": "Delete an emergency call",
                "description": "Delete an emergency call.",
                "operationId": "af2430823d228885e386585a8577f442",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the emergency call",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Emergency call deleted successfully"
                    },
                    "404": {
                        "description": "Emergency call not found"
                    }
                }
            }
        },
        "/api/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a list of all locations",
                "description": "Display a list of all locations.",
                "operationId": "4a95f25c1e13530115fd3fd6961b92de",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "room": {
                                                "type": "string",
                                                "example": "Room 101"
                                            },
                                            "floor": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "limit": {
                                                "type": "integer",
                                                "example": 50
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "description": "Create a new location.",
                "operationId": "2e940d1dad83fe7c7fb5a308a7f6d84a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room",
                                    "floor",
                                    "limit"
                                ],
                                "properties": {
                                    "room": {
                                        "type": "string",
                                        "example": "Room 101"
                                    },
                                    "floor": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "room": {
                                            "type": "string",
                                            "example": "Room 101"
                                        },
                                        "floor": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/locations/{id}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a specific location by ID",
                "description": "Get a specific location by ID.",
                "operationId": "5ac0324577506ee36225fdb6a881506c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "room": {
                                            "type": "string",
                                            "example": "Room 101"
                                        },
                                        "floor": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update a specific location by ID",
                "description": "Update a specific location by ID.",
                "operationId": "42f75cf2951683141c55565f6c6e10ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "room": {
                                        "type": "string",
                                        "example": "Room 102"
                                    },
                                    "floor": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "room": {
                                            "type": "string",
                                            "example": "Room 102"
                                        },
                                        "floor": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a specific location by ID",
                "description": "Delete a specific location by ID.",
                "operationId": "32274c410d9a158665aabbb58f7830ad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            }
        },
        "/api/medical-records": {
            "get": {
                "tags": [
                    "Medical Records"
                ],
                "summary": "Get all medical records",
                "description": "Get all medical records\n\nReturns a list of all medical records available in the system.",
                "operationId": "c3a15222a5a05a9d0ff1decf8f86222c",
                "responses": {
                    "200": {
                        "description": "List of medical records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "patient_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "record_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-05-05"
                                                    },
                                                    "blood_pressure": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 120.8
                                                    },
                                                    "temperature": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 36.6
                                                    },
                                                    "pulse": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 75
                                                    },
                                                    "weight": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 70.5
                                                    },
                                                    "mood": {
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "pain_level": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "oxygen_saturation": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 98.5
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-05T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-05T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Medical Records"
                ],
                "summary": "Create a new medical record",
                "description": "Create a new medical record\n\nCreates a new medical record for a patient with the provided health parameters.",
                "operationId": "562a9bb1a3476fa3cd18ea0d9f82b4e4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "record_date",
                                    "blood_pressure",
                                    "temperature",
                                    "pulse",
                                    "weight",
                                    "mood",
                                    "pain_level",
                                    "oxygen_saturation"
                                ],
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "record_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-05"
                                    },
                                    "blood_pressure": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.8
                                    },
                                    "temperature": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 36.6
                                    },
                                    "pulse": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 75
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 70.5
                                    },
                                    "mood": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "pain_level": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "oxygen_saturation": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 98.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Medical record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "patient_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "record_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-05-05"
                                                },
                                                "blood_pressure": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.8
                                                },
                                                "temperature": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 36.6
                                                },
                                                "pulse": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 75
                                                },
                                                "weight": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 70.5
                                                },
                                                "mood": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "pain_level": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "oxygen_saturation": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 98.5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "patient_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The patient_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/medical-records/{id}": {
            "get": {
                "tags": [
                    "Medical Records"
                ],
                "summary": "Get medical record details",
                "description": "Get medical record details\n\nReturns detailed information about a specific medical record.",
                "operationId": "40cb6c96abf27f918b8ca1b1ac7dbd86",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the medical record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medical record details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "patient_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "record_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-05-05"
                                                },
                                                "blood_pressure": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.8
                                                },
                                                "temperature": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 36.6
                                                },
                                                "pulse": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 75
                                                },
                                                "weight": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 70.5
                                                },
                                                "mood": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "pain_level": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "oxygen_saturation": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 98.5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\MedicalRecord] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Medical Records"
                ],
                "summary": "Update medical record",
                "description": "Update medical record\n\nUpdates an existing medical record with the provided data.",
                "operationId": "d9a7020f71034847d32aeb03f85d2b9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the medical record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "record_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-10"
                                    },
                                    "blood_pressure": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 118.75
                                    },
                                    "temperature": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 36.8
                                    },
                                    "pulse": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 72
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 71.2
                                    },
                                    "mood": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "pain_level": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "oxygen_saturation": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Medical record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "patient_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "record_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-05-10"
                                                },
                                                "blood_pressure": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 118.75
                                                },
                                                "temperature": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 36.8
                                                },
                                                "pulse": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 72
                                                },
                                                "weight": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 71.2
                                                },
                                                "mood": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "pain_level": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "oxygen_saturation": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 99.1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-13T10:15:22Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\MedicalRecord] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "mood": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The mood must be between 1 and 10."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Medical Records"
                ],
                "summary": "Delete medical record",
                "description": "Delete medical record\n\nRemoves a specific medical record from the system.",
                "operationId": "cf1b3c22c68b31789ddaee88354bf4cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the medical record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medical record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Medical record deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\MedicalRecord] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/medications": {
            "get": {
                "tags": [
                    "Medications"
                ],
                "summary": "Get all medications",
                "description": "List all medications\n\nRetrieves a list of all medications in the system.",
                "operationId": "bd1a31af3fcb2ea56e39b717b21708b4",
                "responses": {
                    "200": {
                        "description": "List of medications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Paracetamol"
                                                    },
                                                    "info": {
                                                        "type": "string",
                                                        "example": "Pain reliever that can reduce fever and relieve mild to moderate pain"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-05T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-05T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Medications"
                ],
                "summary": "Create a new medication",
                "description": "Create a medication\n\nCreates a new medication with the provided information.",
                "operationId": "8796f249e6660b30f2f4d92cd42307b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "info"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Ibuprofen"
                                    },
                                    "info": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Nonsteroidal anti-inflammatory drug used for treating pain, fever, and inflammation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Medication created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Ibuprofen"
                                                },
                                                "info": {
                                                    "type": "string",
                                                    "example": "Nonsteroidal anti-inflammatory drug used for treating pain, fever, and inflammation"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "info": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The info field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/medications/{id}": {
            "get": {
                "tags": [
                    "Medications"
                ],
                "summary": "Get a specific medication",
                "description": "Get a medication\n\nRetrieves information about a specific medication.",
                "operationId": "917f943f86ede7ef00d6aa23257c0f66",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Medication ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medication details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Aspirin"
                                                },
                                                "info": {
                                                    "type": "string",
                                                    "example": "Used to treat pain, fever, or inflammation"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Medication not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Medication] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Medications"
                ],
                "summary": "Update a medication",
                "description": "Update a medication\n\nUpdates an existing medication with new information.",
                "operationId": "e624fff0303a2a32e758739f26b09641",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Medication ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Amoxicillin"
                                    },
                                    "info": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Antibiotic used to treat bacterial infections"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Medication updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Amoxicillin"
                                                },
                                                "info": {
                                                    "type": "string",
                                                    "example": "Antibiotic used to treat bacterial infections"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Medication not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Medication] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name may not be greater than 255 characters."
                                                    }
                                                },
                                                "info": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The info may not be greater than 1000 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Medications"
                ],
                "summary": "Delete a medication",
                "description": "Delete a medication\n\nPermanently removes a medication from the system.",
                "operationId": "11f17d5bbf82c32b43ab1fb30ae617fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Medication ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Medication deleted"
                    },
                    "404": {
                        "description": "Medication not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Medication] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patients": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get all patients",
                "description": "Retrieves a list of all patients in the system",
                "operationId": "getPatientsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Jan"
                                            },
                                            "s_name": {
                                                "type": "string",
                                                "example": "Kowalski"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "jan.kowalski@example.com"
                                            },
                                            "date_of_birth": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "1990-01-15"
                                            },
                                            "location_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create a new patient",
                "description": "Creates a new patient with the provided information",
                "operationId": "storePatient",
                "requestBody": {
                    "description": "Patient creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "s_name",
                                    "email",
                                    "date_of_birth",
                                    "location_id",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Patient's first name",
                                        "type": "string",
                                        "example": "Anna"
                                    },
                                    "s_name": {
                                        "description": "Patient's surname",
                                        "type": "string",
                                        "example": "Nowak"
                                    },
                                    "email": {
                                        "description": "Patient's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "anna.nowak@example.com"
                                    },
                                    "date_of_birth": {
                                        "description": "Patient's date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1995-05-20"
                                    },
                                    "location_id": {
                                        "description": "Location ID where the patient is registered",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "password": {
                                        "description": "Patient's account password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Anna"
                                        },
                                        "s_name": {
                                            "type": "string",
                                            "example": "Nowak"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "anna.nowak@example.com"
                                        },
                                        "date_of_birth": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "1995-05-20"
                                        },
                                        "location_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patients/{id}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get a patient by ID",
                "description": "Returns detailed information for a specific patient",
                "operationId": "getPatientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jan"
                                        },
                                        "s_name": {
                                            "type": "string",
                                            "example": "Kowalski"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "jan.kowalski@example.com"
                                        },
                                        "date_of_birth": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "1990-01-15"
                                        },
                                        "location_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update a patient",
                "description": "Updates a patient's information in the database",
                "operationId": "updatePatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Patient update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Patient's first name",
                                        "type": "string",
                                        "example": "Tomasz"
                                    },
                                    "s_name": {
                                        "description": "Patient's surname",
                                        "type": "string",
                                        "example": "Wiśniewski"
                                    },
                                    "email": {
                                        "description": "Patient's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "tomasz.wisniewski@example.com"
                                    },
                                    "date_of_birth": {
                                        "description": "Patient's date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1988-11-03"
                                    },
                                    "location_id": {
                                        "description": "Location ID where the patient is registered",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "password": {
                                        "description": "Patient's new password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Tomasz"
                                        },
                                        "s_name": {
                                            "type": "string",
                                            "example": "Wiśniewski"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "tomasz.wisniewski@example.com"
                                        },
                                        "date_of_birth": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "1988-11-03"
                                        },
                                        "location_id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T15:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a patient",
                "description": "Deletes a patient from the database",
                "operationId": "deletePatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recommendations": {
            "get": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get all recommendations",
                "description": "Get all recommendations\n\nReturns a list of all recommendations available in the system.",
                "operationId": "getRecommendations",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Check-up Visit"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Recommended check-up visit in 3 months"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-13T14:30:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-13T14:30:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "Create a new recommendation",
                "description": "Create a new recommendation\n\nStores a new recommendation in the database.",
                "operationId": "storeRecommendation",
                "requestBody": {
                    "description": "Recommendation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Recommendation title",
                                        "type": "string",
                                        "example": "Check-up Visit"
                                    },
                                    "description": {
                                        "description": "Recommendation description",
                                        "type": "string",
                                        "example": "Recommended check-up visit in 3 months"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recommendation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Check-up Visit"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Recommended check-up visit in 3 months"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recommendations/{id}": {
            "get": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "Get recommendation details",
                "description": "Get recommendation details\n\nReturns detailed information about a specific recommendation.",
                "operationId": "getRecommendationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recommendation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Check-up Visit"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Recommended check-up visit in 3 months"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recommendation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recommendation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "Update a recommendation",
                "description": "Update a recommendation\n\nUpdates an existing recommendation with new data.",
                "operationId": "updateRecommendation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recommendation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated recommendation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Modified Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Modified recommendation description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recommendation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Modified Title"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Modified recommendation description"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T15:45:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recommendation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recommendation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "Delete a recommendation",
                "description": "Delete a recommendation\n\nRemoves a specific recommendation from the system.",
                "operationId": "deleteRecommendation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recommendation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recommendation deleted successfully"
                    },
                    "404": {
                        "description": "Recommendation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recommendation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get all staff members",
                "description": "Returns a list of all registered staff members in the system",
                "operationId": "0982bcea347fde85ea4469d1029fe37f",
                "responses": {
                    "200": {
                        "description": "List of all staff members",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "jan.kowalski@medical.com"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "s_name": {
                                                        "type": "string",
                                                        "example": "Kowalski"
                                                    },
                                                    "date_of_birth": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "1985-03-15"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "enum": [
                                                            "internist",
                                                            "specialist",
                                                            "rehabilitator",
                                                            "nurse",
                                                            "doctor"
                                                        ],
                                                        "example": "doctor"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-05T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-05T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Create a new staff member",
                "description": "Store a newly created staff member in the database",
                "operationId": "46dbdda4fa9f1daf0cf2df8476d7ea08",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "name",
                                    "s_name",
                                    "date_of_birth",
                                    "role"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "anna.nowak@medical.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securepassword123"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Anna"
                                    },
                                    "s_name": {
                                        "type": "string",
                                        "example": "Nowak"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-07-22"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "internist",
                                            "specialist",
                                            "rehabilitator",
                                            "nurse",
                                            "doctor"
                                        ],
                                        "example": "nurse"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Staff member created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "anna.nowak@medical.com"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Anna"
                                                },
                                                "s_name": {
                                                    "type": "string",
                                                    "example": "Nowak"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-07-22"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "enum": [
                                                        "internist",
                                                        "specialist",
                                                        "rehabilitator",
                                                        "nurse",
                                                        "doctor"
                                                    ],
                                                    "example": "nurse"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-13T14:30:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-13T14:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected role is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/{id}": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get a specific staff member",
                "description": "Display the details for a specific staff member",
                "operationId": "192b2bdb9642232e67d579bd00560bcc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the staff member",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the staff member",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "tomasz.wisniewski@medical.com"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tomasz"
                                                },
                                                "s_name": {
                                                    "type": "string",
                                                    "example": "Wiśniewski"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1978-11-30"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "enum": [
                                                        "internist",
                                                        "specialist",
                                                        "rehabilitator",
                                                        "nurse",
                                                        "doctor"
                                                    ],
                                                    "example": "specialist"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Staff member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Staff] 99"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Staff"
                ],
                "summary": "Update a specific staff member",
                "description": "Update the details of a specific staff member",
                "operationId": "e6e23288ad4e2a19fb5edd28adc9afde",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the staff member",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "adam.zielinski@medical.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword456"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Adam"
                                    },
                                    "s_name": {
                                        "type": "string",
                                        "example": "Zieliński"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1982-04-12"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "internist",
                                            "specialist",
                                            "rehabilitator",
                                            "nurse",
                                            "doctor"
                                        ],
                                        "example": "internist"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff member updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "adam.zielinski@medical.com"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Adam"
                                                },
                                                "s_name": {
                                                    "type": "string",
                                                    "example": "Zieliński"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1982-04-12"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "enum": [
                                                        "internist",
                                                        "specialist",
                                                        "rehabilitator",
                                                        "nurse",
                                                        "doctor"
                                                    ],
                                                    "example": "internist"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-13T15:45:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Staff member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Staff] 99"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected role is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Staff"
                ],
                "summary": "Delete a specific staff member",
                "description": "Remove a specific staff member from the system",
                "operationId": "b6d2ad2ceadfb9c729589f5062d5bb73",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the staff member",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Staff member deleted successfully"
                    },
                    "404": {
                        "description": "Staff member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Staff] 99"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff-patients": {
            "get": {
                "tags": [
                    "Staff Patients"
                ],
                "summary": "Get a list of all staff-patient relationships",
                "description": "List all staff-patient relationships\n\nReturns a collection of all staff-patient relationship records.",
                "operationId": "getStaffPatients",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "staff_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "patient_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-05-05T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Patients"
                ],
                "summary": "Create a new staff-patient relationship",
                "description": "Create a new staff-patient relationship\n\nStores a new staff-patient relationship in the database.",
                "operationId": "storeStaffPatient",
                "requestBody": {
                    "description": "Staff-patient data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "staff_id",
                                    "patient_id"
                                ],
                                "properties": {
                                    "staff_id": {
                                        "description": "ID of the staff member",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "patient_id": {
                                        "description": "ID of the patient",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Relationship created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "staff_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "patient_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T14:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "staff_id": [
                                                    "The staff id field is required."
                                                ],
                                                "patient_id": [
                                                    "The patient id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff-patients/{id}": {
            "get": {
                "tags": [
                    "Staff Patients"
                ],
                "summary": "Get a specific staff-patient relationship",
                "description": "Get a specific staff-patient relationship\n\nReturns details of a specific staff-patient relationship.",
                "operationId": "getStaffPatientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the staff-patient relationship",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "staff_id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "patient_id": {
                                            "type": "integer",
                                            "example": 4
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Staff-patient relationship not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Staff-patient relationship not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Staff Patients"
                ],
                "summary": "Update a staff-patient relationship",
                "description": "Update a staff-patient relationship\n\nUpdates an existing staff-patient relationship.",
                "operationId": "updateStaffPatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the staff-patient relationship",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated staff-patient data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "staff_id": {
                                        "description": "ID of the staff member",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "patient_id": {
                                        "description": "ID of the patient",
                                        "type": "integer",
                                        "example": 6
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Relationship updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "staff_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "patient_id": {
                                            "type": "integer",
                                            "example": 6
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-05T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-05-13T15:45:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Staff-patient relationship not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Staff-patient relationship not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "staff_id": [
                                                    "The staff id must be an integer."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Staff Patients"
                ],
                "summary": "Delete a staff-patient relationship",
                "description": "Delete a staff-patient relationship\n\nRemoves a staff-patient relationship from the database.",
                "operationId": "deleteStaffPatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the staff-patient relationship",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Relationship deleted successfully"
                    },
                    "404": {
                        "description": "Staff-patient relationship not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Staff-patient relationship not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter your JWT token in the format: Bearer {token}"
            }
        }
    },
    "tags": [
        {
            "name": "EmergencyCalls",
            "description": "API Endpoints for managing emergency calls"
        },
        {
            "name": "Locations",
            "description": "API Endpoints for managing locations"
        },
        {
            "name": "Patients",
            "description": "Operations related to patient management"
        },
        {
            "name": "Recommendations",
            "description": "Operations related to recommendations"
        },
        {
            "name": "Staff",
            "description": "Operations related to staff management"
        },
        {
            "name": "Staff Patients",
            "description": "Operations on staff-patient relationships"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Medical Records",
            "description": "Medical Records"
        },
        {
            "name": "Medications",
            "description": "Medications"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}